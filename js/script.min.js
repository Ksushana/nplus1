(() => {
  const MOBILE = 863;
  const TABLET = 1023;

  window.isMobile = function () {
    return window.matchMedia(`(max-width: ${MOBILE}px)`).matches;
  };

  window.isTablet = function () {
    return window.matchMedia(`(max-width: ${TABLET}px)`).matches;
  };

  window.isDesktop = function () {
    return window.matchMedia(`(min-width: ${TABLET + 1}px)`).matches;
  };

  window.isMobileSafari = () => {
    const ua = window.navigator.userAgent;
    const iOS = !!ua.match(/iP(ad|od|hone)/i);
    const webkit = !!ua.match(/WebKit/i);
    return iOS && webkit && !ua.match(/CriOS/i) && !ua.match(/OPiOS/i);
  };
})();

'use strict';

(() => {
// Получаем нужный элемент
// var cyclists = document.querySelector('.landing__cyclists');

// var Visible = function (target) {
//   var targetPosition = {
//       top: window.pageYOffset + target.getBoundingClientRect().top,
//       left: window.pageXOffset + target.getBoundingClientRect().left,
//       right: window.pageXOffset + target.getBoundingClientRect().right,
//       bottom: window.pageYOffset + target.getBoundingClientRect().bottom
//     },
//     // Получаем позиции окна
//     windowPosition = {
//       top: window.pageYOffset,
//       left: window.pageXOffset,
//       right: window.pageXOffset + document.documentElement.clientWidth,
//       bottom: window.pageYOffset + document.documentElement.clientHeight
//     };

//   if (targetPosition.top < windowPosition.bottom ){

//   }

//   if(isMobile()) {
//     if (targetPosition.top < windowPosition.top ){
//       cyclists.classList.remove('start');
//     }
//   }
// };

// // Запускаем функцию при прокрутке страницы
// window.addEventListener('scroll', function() {
//   Visible (cyclists);
// });

// // А также запустим функцию сразу. А то вдруг, элемент изначально видно
// Visible (cyclists);

var paralax = document.querySelector('.landing__cyclists');

var moveCoef = 0.1;

window.addEventListener("scroll", scroll);
window.addEventListener("resize", scroll);
scroll();

function scroll() {
  var r = paralax.getBoundingClientRect();

  var paralaxYCenter = r.y + r.height / 2;
  var scrollYCenter = window.innerHeight / 2;

  var move = (paralaxYCenter - scrollYCenter) * moveCoef - 10;

  if(isMobile()) {
    var paralaxYCenter = r.y;
    var scrollYCenter = window.innerHeight + 150;
    var move = (paralaxYCenter - scrollYCenter) * moveCoef - 300;
  }

  paralax.style.transform = "translateX(" + move + "px";
}
})();
'use strict';

(() => {
  const followBlock = document.querySelector('.follow-btn');
  const followList = document.querySelector('.follow-btn__list');
  const followBtn = document.querySelector('.follow-btn');
  const followBtnCross = document.querySelector('.follow-btn__opened');
  const followBtnOpen = document.querySelector('.follow-btn__closed');
  function hide(e) {
    const target = e.target;
    if (target !== followBlock) {
      followList.classList.remove("is-shown");
      followBtn.classList.remove("follow-btn__open");
    }
  }

  function open() {
    followBtn.classList.add("follow-btn__open");
    followList.classList.add("is-shown");
  }

  function close() {
    followBtn.classList.remove("follow-btn__open");
    followList.classList.remove("is-shown");
  }

  document.addEventListener("click", hide, true);
  followBtnOpen.addEventListener("click", open);
  followBtnCross.addEventListener("click", close);
})();

// (() => {
//   const followBlock = document.querySelector('.follow-btn');
//   console.log(followBlock)
//   var windowScroll = window.pageYOffset;
//   window.addEventListener('scroll', function () {
//     console.log(windowScroll)
//     if (windowScroll > 200) {
//       followBlock.style.opacity = '0';
//       followBlock.style.transition = '1.75s';
//     } else {
//       followBlock.style.opacity = '1';
//       followBlock.style.transition = '1.75s';
//     }
//   });
// })();